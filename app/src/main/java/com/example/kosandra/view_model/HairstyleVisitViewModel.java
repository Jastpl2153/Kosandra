package com.example.kosandra.view_model;

import android.app.Application;

import androidx.annotation.NonNull;
import androidx.lifecycle.AndroidViewModel;
import androidx.lifecycle.LiveData;

import com.example.kosandra.db.returnSql.SqlIncomeHairstyle;
import com.example.kosandra.db.returnSql.SqlIncomeHairstyleRangeDate;
import com.example.kosandra.entity.HairstyleVisit;
import com.example.kosandra.repository.HairstyleStyleRepository;

import java.time.LocalDate;
import java.util.List;

/**
 * ViewModel class responsible for managing hairstyle visit data and interactions with repository.
 */
public class HairstyleVisitViewModel extends AndroidViewModel {
    /**
     * Repository instance to handle data operations.
     */
    private HairstyleStyleRepository repository;

    /**
     * Constructor for HairstyleVisitViewModel.
     *
     * @param application The application context.
     */
    public HairstyleVisitViewModel(@NonNull Application application) {
        super(application);
        repository = new HairstyleStyleRepository(application);
    }

    /**
     * Insert a new hairstyle visit into the database.
     *
     * @param hairstyleVisit The HairstyleVisit object to be inserted.
     */
    public void insert(HairstyleVisit hairstyleVisit) {
        repository.insert(hairstyleVisit);
    }

    /**
     * Update an existing hairstyle visit in the database.
     *
     * @param hairstyleVisit The HairstyleVisit object to be updated.
     */
    public void update(HairstyleVisit hairstyleVisit) {
        repository.update(hairstyleVisit);
    }

    /**
     * Delete a hairstyle visit from the database.
     *
     * @param hairstyleVisit The HairstyleVisit object to be deleted.
     */
    public void delete(HairstyleVisit hairstyleVisit) {
        repository.delete(hairstyleVisit);
    }

    /**
     * Get all hairstyle visits for a specific client.
     *
     * @param clientId The ID of the client.
     * @return LiveData list of HairstyleVisit objects.
     */
    public LiveData<List<HairstyleVisit>> getAllClientHairstyles(int clientId) {
        return repository.getAllClientHairstyles(clientId);
    }

    /**
     * Get a specific hairstyle visit by its ID.
     *
     * @param id The ID of the hairstyle visit.
     * @return LiveData object of the HairstyleVisit.
     */
    public LiveData<HairstyleVisit> getHairstyleVisit(int id) {
        return repository.getHairstyleVisit(id);
    }

    /**
     * Get all hairstyle visits stored in the database.
     *
     * @return LiveData list of all HairstyleVisit objects.
     */
    public LiveData<List<HairstyleVisit>> getAllHairstyleVisit() {
        return repository.getAllHairstyleVisit();
    }

    /**
     * Get the most popular hairstyle based on income.
     *
     * @return LiveData object of the most popular SqlIncomeHairstyle.
     */
    public LiveData<SqlIncomeHairstyle> getMostPopularHairstyle() {
        return repository.getMostPopularHairstyle();
    }

    /**
     * Get the most profitable hairstyle based on income.
     *
     * @return LiveData object of the most profitable SqlIncomeHairstyle.
     */
    public LiveData<SqlIncomeHairstyle> getMostProfitableHairstyle() {
        return repository.getMostProfitableHairstyle();
    }

    /**
     * Get the income generated by each hairstyle within a specified date range.
     *
     * @param startDate The start date of the range.
     * @param endDate   The end date of the range.
     * @return LiveData list of SqlIncomeHairstyleRangeDate objects.
     */
    public LiveData<List<SqlIncomeHairstyleRangeDate>> getHairstyleIncome(LocalDate startDate, LocalDate endDate) {
        return repository.getHairstyleIncome(startDate, endDate);
    }
}
